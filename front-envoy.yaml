static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          generate_request_id: true
          tracing:
            operation_name: egress
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              response_headers_to_add:
                header: 
                  key: stage
                  value: prod
              # request_headers_to_add:
              #   header: 
              #     key: stage
              #     value: prod
              routes:
              # - match:
              #     prefix: "/service/1"
              #     query_parameters:
              #       - name: "name"
              #         value: ".*tom.*"
              #         regex: true
              #   route:
              #     cluster: service1
              # - match:
              #     prefix: "/service/1"
              #     query_parameters:
              #       - name: "name"
              #         value: "t[om]m"
              #         regex: true
              #   route:
              #     cluster: service1
              # - match:
              #     prefix: "/service/1"
              #     query_parameters:
              #       - name: "name"
              #         value: "kitty"
              #   route:
              #     cluster: service1
              - match:
                  prefix: "/service/1"
                  headers: 
                    - name: "stage"
                      exact_match: "prod"
                route:
                  cluster: service1
              - match:
                  prefix: "/service/1"
                  headers: 
                    - name: "stage"
                      exact_match: "test"
                route:
                  cluster: service2
              # - match:
              #     prefix: "/service/2
              #     headers: 
              #       - name: ":method"
              #         exact_match: "GET"
              #   route:
              #     cluster: service2
              - match:
                  prefix: "/service/rule/test"
                route:
                  weighted_clusters: 
                    clusters: 
                      - name: service1
                        weight: 30
                      - name: service2
                        weight: 70
                    total_weight: 100
                    runtime_key_prefix: "routing.traffic_split.rule-test"
          http_filters:
          - name: envoy.lua
            config:
              inline_code: |
                function envoy_on_request(request_handle)
                  request_handle:logDebug("aaaaaaaaaaaaaaaa")
                  request_handle:headers():add("stage", "prod")
                end
                function envoy_on_response(response_handle)
                end
          - name: envoy.router
            config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 1234
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          generate_request_id: true
          tracing:
            operation_name: egress
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              # - match:
              #     prefix: "/service/1"
              #   route:
              #     cluster: service1
              #     priority: "default"
              - match:
                  prefix: "/service/1"
                  headers: 
                    - name: "stage"
                      exact_match: "test"
                route:
                  cluster: service1
              # - match:
              #     prefix: "/service/1"
              #     headers: 
              #       - name: "stage"
              #         exact_match: "prod"
              #   route:
              #     cluster: service2
          http_filters:
          - name: envoy.lua
            config:
              inline_code: |
                function envoy_on_request(request_handle)
                  request_handle:headers():add("stage", "test")
                end
                function envoy_on_response(response_handle)
                end
          - name: envoy.router
            config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 9191
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          access_log:
          - name: envoy.file_access_log
            filter:
              status_code_filter:
                comparison:
                  op: "GE"
                  value:
                    default_value: 200
                    runtime_key: access_log_status_code
            config:
              path: "/var/log/envoy_access.log"
              format: |
                {"protocol": "%PROTOCOL%", "duration": "%DURATION%", "request_method": "%REQ(:METHOD)%"}
              # format: |
              #   [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
          generate_request_id: true
          tracing:
            operation_name: egress
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                route:
                  cluster: service1
          http_filters:
          - name: envoy.router
            config: {}
  clusters:
  - name: service1
    connect_timeout: 0.250s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    circuit_breakers: {      
      "thresholds": [
        {
          "priority": "default",
          "max_connections": 1024,
          "max_pending_requests": 1024,
          "max_requests": 1024,
          "max_retries": 3
        }
      ]
    }
    load_assignment:
      cluster_name: service1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service1
                port_value: 80
          load_balancing_weight: 128
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service1-1
                port_value: 80
          load_balancing_weight: 1
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service1-2
                port_value: 80
          load_balancing_weight: 1
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service1-3
                port_value: 80
          load_balancing_weight: 1
        
  - name: service2
    connect_timeout: 0.250s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    circuit_breakers: {      
      "thresholds": [
        {
          "priority": "default",
          "max_connections": 1024,
          "max_pending_requests": 1024,
          "max_requests": 1024,
          "max_retries": 3
        }
      ]
    }
    hosts:
    - socket_address:
        address: service2
        port_value: 80
tracing:
  http:
    name: envoy.local
    config:
      collector_cluster: local
      collector_endpoint: /var/log/trace_log.log
node:
  id: front-node
  cluster: front-cluster
  metadata:
    filter_metadata:
      envoy.lua:
        foo: bar
        baz:
          - bad
          - baz
admin:
  access_log_path: "/var/log/envoy_log.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
